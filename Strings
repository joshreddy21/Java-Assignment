****Different ways creating a string ****
<<<Using String Literal>>>>>
String str1 = "John";
<<<<<Using new Keyword>>>>
String str2 = new String("Josh!");
<<<<Using String(char[]) Constructor>>>>
char[] charArray = {'h', 'e', 'l', 'l', 'o'};
String str3 = new String(charArray);
<<<<<<<Using String(byte[]) Constructor>>>>
byte[] byteArray = {72, 101, 108, 108, 111}; // ASCII values for "Hello"
String str4 = new String(byteArray);

<<<<<<Using + Operator>>>>
String str9 = "Hello" + ", " + "World";

<<<<<Using String.join Method>>>>>
String[] words = { "World"};
String str8 = String.join(", ", words);
<<<<<Using String.format Method>>
String str6 = String.format("Value is %d", 42);


******Concatenating two strings using + operator****
public class StringConcatenationExample {
    public static void main(String[] args) {
        String str1 = "Hello";
        String str2 = "World";

        // Concatenate using the + operator
        String result = str1 + ", " + str2;

        // Print the result
        System.out.println(result);
    }
}

********Finding the length of the string****
public class StringLengthExample {
    public static void main(String[] args) {
        String myString = "Hello, World!";

        // Get the length of the string
        int length = myString.length();

        // Print the length
        System.out.println("Length of the string: " + length);
    }
}

****Extract a string using Substring***

public class SubstringExample {
    public static void main(String[] args) {
        String originalString = "Hello, World!";

        // Extract substring from index 7 to the end of the string
        String substring1 = originalString.substring(7);
        System.out.println("Substring 1: " + substring1);

        // Extract substring from index 0 to 5 (exclusive)
        String substring2 = originalString.substring(0, 5);
        System.out.println("Substring 2: " + substring2);
    }
}

**** . Searching in strings using indexOf()*****
public class StringSearchExample {
    public static void main(String[] args) {
        String myString = "Hello, World!";

        // Search for the index of a substring
        int index1 = myString.indexOf("World");
        int index2 = myString.indexOf("Java");

        // Print the results
        System.out.println("Index of 'World': " + index1); // Output: 7
        System.out.println("Index of 'Java': " + index2);  // Output: -1 (not found)
    }
}

**************Matching a String Against a Regular Expression With matches()*****************
public class StringRegexMatching {

    public static void main(String[] args) {
        String input = "Hello123";

        // Regular expression to match strings containing only letters
        String regexLettersOnly = "[a-zA-Z]+";

        // Regular expression to match strings containing only letters and numbers
        String regexLettersAndNumbers = "[a-zA-Z0-9]+";

        // Check if the input string matches the regular expressions
        boolean matchesLettersOnly = input.matches(regexLettersOnly);
        boolean matchesLettersAndNumbers = input.matches(regexLettersAndNumbers);

        // Output the results
        System.out.println("Does the string contain only letters? " + matchesLettersOnly);
        System.out.println("Does the string contain only letters and numbers? " + matchesLettersAndNumbers);
    }
}
***************** Comparing strings using the methods equals()**************
public class StringComparisonExample {

    public static void main(String[] args) {
        String str1 = "Sai";
        String str2 = "Jyothsna Reddy";
        String str3 = "Bujula";

        // Using equals() to compare strings
        boolean isEqual1 = str1.equals(str2); // Case-sensitive comparison
        boolean isEqual2 = str1.equals(str3); // Case-sensitive comparison

        // Output the results
        System.out.println("Is str1 equal to str2? " + isEqual1);
        System.out.println("Is str1 equal to str3? " + isEqual2);
    }
}

**************** equalsIgnoreCase(), startsWith(), endsWith() and compareTo()
*************

String str1 = "Hello";
String str2 = "hello";

boolean isEqualIgnoreCase = str1.equalsIgnoreCase(str2);
System.out.println("Is str1 equal to str2 (case-insensitive)? " + isEqualIgnoreCase);


String str = "Hello, World!";

boolean startsWithHello = str.startsWith("Hello");
System.out.println("Does the string start with 'Hello'? " + startsWithHello);


String str = "Hello, World!";

boolean endsWithWorld = str.endsWith("World!");
System.out.println("Does the string end with 'World!'? " + endsWithWorld);


String str1 = "apple";
String str2 = "banana";

int result = str1.compareTo(str2);
System.out.println("Comparison result: " + result);


************Trimming strings with trim() *************
public class StringTrimExample {

    public static void main(String[] args) {
        String originalString = "    Hello, World!    ";

        // Using trim() to remove leading and trailing whitespaces
        String trimmedString = originalString.trim();

        // Output the results
        System.out.println("Original String: '" + originalString + "'");
        System.out.println("Trimmed String: '" + trimmedString + "'");
    }
}


************ Replacing characters in strings with replace()*************
public class StringReplaceExample {

    public static void main(String[] args) {
        String originalString = "Hello, World!";

        // Using replace() to replace characters
        String replacedString = originalString.replace('o', 'x');

        // Output the results
        System.out.println("Original String: '" + originalString + "'");
        System.out.println("Replaced String: '" + replacedString + "'");
    }
}
************* Splitting strings with split()***********
public class StringSplitExample {

    public static void main(String[] args) {
        String originalString = "apple,orange,banana,grape";

        // Using split() to split the string into an array
        String[] fruitsArray = originalString.split(",");

        // Output the results
        System.out.println("Original String: '" + originalString + "'");

        // Output each element of the array
        for (String fruit : fruitsArray) {
            System.out.println("Fruit: '" + fruit + "'");
        }
    }
}

********** Converting Numbers to Strings with valueOf()*************
public class NumberToStringConversion {

    public static void main(String[] args) {
        int intValue = 42;
        double doubleValue = 3.14;
        boolean booleanValue = true;

        // Using valueOf() to convert numbers to strings
        String intString = String.valueOf(intValue);
        String doubleString = String.valueOf(doubleValue);
        String booleanString = String.valueOf(booleanValue);

        // Output the results
        System.out.println("Integer as String: " + intString);
        System.out.println("Double as String: " + doubleString);
        System.out.println("Boolean as String: " + booleanString);

        // You can also use concatenation with an empty string to achieve the same result
        String intStringConcatenation = "" + intValue;
        System.out.println("Integer as String (concatenation): " + intStringConcatenation);
    }
}

************Converting integer objects to Strings***************
Integer intValue = 42;

// Using String.valueOf()
String stringValue1 = String.valueOf(intValue);

// Using Integer.toString()
String stringValue2 = Integer.toString(intValue);

************ Converting to uppercase and lowercase**************

public class CaseConversionExample {

    public static void main(String[] args) {
        String originalString = "Hello, World!";

        // Convert to uppercase
        String uppercaseString = originalString.toUpperCase();

        // Convert to lowercase
        String lowercaseString = originalString.toLowerCase();

        // Output the results
        System.out.println("Original String: '" + originalString + "'");
        System.out.println("Uppercase String: '" + uppercaseString + "'");
        System.out.println("Lowercase String: '" + lowercaseString + "'");
    }
}


